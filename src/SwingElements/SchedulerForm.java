package SwingElements;

import EventScheduler.EventScheduler;
import EventScheduler.Events.*;
import java.util.ArrayList;
import javax.swing.JComboBox;
import javax.swing.JList;
import javax.swing.SwingUtilities;

/**
 * A form for creating, editing, and deleting {@link Event} objects.
 */
public class SchedulerForm extends javax.swing.JFrame implements Runnable {

    private Base ref;                                                   //Base object for accessing other needed objects
    private EventScheduler scheduler;                                   //Event scheduler object
    private EventDetailsInputForm createEventForm;                      //Form used to input information for most events
    private LineEventDetailsInputForm createLineEventForm;              //Form used to input information for line creation events

    /**
     * Constructor
     *
     * @param in Reference {@link Base} object
     */
    public SchedulerForm(Base in) {
        ref = in;
        scheduler = ref.scheduler;
        initComponents();
        updateRepeatEventList();
        updateSingleEventList();
        toFront();
        this.setTitle("Event Scheduler");
    }//end constructor

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        RepeatEventList = new javax.swing.JList();
        jScrollPane2 = new javax.swing.JScrollPane();
        SingleEventList = new javax.swing.JList();
        jPanel1 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        EventTypeLabel = new javax.swing.JLabel();
        CreateEventComboBox = new javax.swing.JComboBox();
        jPanel3 = new javax.swing.JPanel();
        CreateEventButton = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        DeleteSelectedEventsButton = new javax.swing.JButton();
        jPanel6 = new javax.swing.JPanel();
        ClearEventsButton = new javax.swing.JButton();
        RepeatEventListLabel = new javax.swing.JLabel();
        SingleEventListLabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setMaximumSize(new java.awt.Dimension(700, 300));
        setMinimumSize(new java.awt.Dimension(700, 300));

        RepeatEventList.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                RepeatEventListMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(RepeatEventList);

        SingleEventList.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                SingleEventListMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(SingleEventList);

        jPanel1.setMinimumSize(new java.awt.Dimension(300, 300));
        jPanel1.setPreferredSize(new java.awt.Dimension(300, 300));

        jPanel4.setMaximumSize(new java.awt.Dimension(300, 112));
        jPanel4.setMinimumSize(new java.awt.Dimension(300, 112));
        jPanel4.setName(""); // NOI18N
        jPanel4.setPreferredSize(new java.awt.Dimension(300, 112));

        jPanel2.setMaximumSize(new java.awt.Dimension(300, 23));
        jPanel2.setMinimumSize(new java.awt.Dimension(300, 23));
        jPanel2.setPreferredSize(new java.awt.Dimension(300, 23));

        EventTypeLabel.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        EventTypeLabel.setText("Event Type:");
        EventTypeLabel.setMaximumSize(new java.awt.Dimension(25, 23));
        EventTypeLabel.setMinimumSize(new java.awt.Dimension(25, 23));
        EventTypeLabel.setPreferredSize(new java.awt.Dimension(25, 23));

        CreateEventComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Gather Statistics", "Output Statistics", "Run", "Pause", "Refresh Seed", "Reset Grid", "Place Line", "Generate Random Line" }));
        CreateEventComboBox.setMaximumSize(new java.awt.Dimension(140, 23));
        CreateEventComboBox.setMinimumSize(new java.awt.Dimension(140, 23));
        CreateEventComboBox.setPreferredSize(new java.awt.Dimension(140, 23));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addComponent(EventTypeLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(CreateEventComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(50, 50, 50))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(EventTypeLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(CreateEventComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        jPanel3.setMaximumSize(new java.awt.Dimension(300, 23));
        jPanel3.setMinimumSize(new java.awt.Dimension(300, 23));
        jPanel3.setPreferredSize(new java.awt.Dimension(300, 23));

        CreateEventButton.setText("Create Event");
        CreateEventButton.setMaximumSize(new java.awt.Dimension(200, 23));
        CreateEventButton.setMinimumSize(new java.awt.Dimension(200, 23));
        CreateEventButton.setPreferredSize(new java.awt.Dimension(200, 23));
        CreateEventButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CreateEventButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addComponent(CreateEventButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(91, 91, 91))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(CreateEventButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jPanel5.setMinimumSize(new java.awt.Dimension(300, 23));

        DeleteSelectedEventsButton.setText("Delete Selected Events");
        DeleteSelectedEventsButton.setMaximumSize(new java.awt.Dimension(200, 23));
        DeleteSelectedEventsButton.setMinimumSize(new java.awt.Dimension(200, 23));
        DeleteSelectedEventsButton.setPreferredSize(new java.awt.Dimension(200, 23));
        DeleteSelectedEventsButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeleteSelectedEventsButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addComponent(DeleteSelectedEventsButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(DeleteSelectedEventsButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        jPanel6.setMaximumSize(new java.awt.Dimension(300, 23));
        jPanel6.setMinimumSize(new java.awt.Dimension(300, 23));
        jPanel6.setPreferredSize(new java.awt.Dimension(300, 23));

        ClearEventsButton.setText("Clear Events");
        ClearEventsButton.setMaximumSize(new java.awt.Dimension(200, 23));
        ClearEventsButton.setMinimumSize(new java.awt.Dimension(200, 23));
        ClearEventsButton.setPreferredSize(new java.awt.Dimension(200, 23));
        ClearEventsButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ClearEventsButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addComponent(ClearEventsButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(50, Short.MAX_VALUE))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(ClearEventsButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jPanel3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(5, 5, 5)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(5, 5, 5)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(5, 5, 5)
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(96, 96, 96))
        );

        RepeatEventListLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        RepeatEventListLabel.setText("Repeating Events");

        SingleEventListLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        SingleEventListLabel.setText("Single Events");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(RepeatEventListLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, 0)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(SingleEventListLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(RepeatEventListLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(SingleEventListLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(0, 0, 0)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE)))
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Action method for the create event button. Determines which event was
     * selected, and presents the user with the appropriate input form. Most
     * events prompt {@link EventDetailsInputForm}, but the Place Line event
     * prompts a {@link CustomLineForm}.
     */
    private void CreateEventButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CreateEventButtonActionPerformed
        String selected = (String) CreateEventComboBox.getSelectedItem();
        createEventForm = null;
        createLineEventForm = null;
        switch (selected) {
            case "Gather Statistics":
            case "Output Statistics":
            case "Run":
            case "Pause":
            case "Refresh Grid":
            case "Reset Grid":
            case "Generate Random Line":
                createEventForm = new EventDetailsInputForm(this);
                createEventForm.setVisible(true);
                break;
            case "Place Line":
                createLineEventForm = new LineEventDetailsInputForm(this, ref);
                createLineEventForm.setVisible(true);
                break;
            default:
                System.err.println("Invalid CreateEventComboBox option selected!");
        }//end switch
    }//GEN-LAST:event_CreateEventButtonActionPerformed

    /**
     * Mouse event used when users double click on the Repeat Event List. Brings
     * up the form to edit event details.
     */
    private void RepeatEventListMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_RepeatEventListMouseClicked
        JList list = (JList) evt.getSource();
        if (evt.getClickCount() == 2) {
            Event e = scheduler.getRepeatedEvents().get(list.getSelectedIndex());
            if (!(e instanceof PlaceLineEvent)) {
                createEventForm = new EventDetailsInputForm(this, e);
                createEventForm.setVisible(true);
            }//end if
            else {
                createLineEventForm = new LineEventDetailsInputForm(this, ref, (PlaceLineEvent) e);
                createLineEventForm.setVisible(true);
            }//end else 
        }//end if
    }//GEN-LAST:event_RepeatEventListMouseClicked

    /**
     * Mouse event used when users double click on the Single Event List. Brings
     * up the form to edit event details.
     */
    private void SingleEventListMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_SingleEventListMouseClicked
        JList list = (JList) evt.getSource();
        if (evt.getClickCount() == 2) {
            Event e = scheduler.getSingleEvents().get(list.getSelectedIndex());
            if (!(e instanceof PlaceLineEvent)) {
                createEventForm = new EventDetailsInputForm(this, e);
                SwingUtilities.invokeLater(createEventForm);
            }//end if
            else {
                createLineEventForm = new LineEventDetailsInputForm(this, ref, (PlaceLineEvent) e);
                SwingUtilities.invokeLater(createLineEventForm);
                createLineEventForm.setVisible(true);
            }//end else 
        }//end if
    }//GEN-LAST:event_SingleEventListMouseClicked

    /**
     * Action method used when the user click the delete events button. Deletes
     * selected events from both the single and repeat event lists.
     */
    private void DeleteSelectedEventsButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeleteSelectedEventsButtonActionPerformed
        ArrayList<Event> doomedEvents = new ArrayList<>();
        ArrayList<Event> repeatEvents = scheduler.getRepeatedEvents();
        ArrayList<Event> singleEvents = scheduler.getSingleEvents();
        for (int i : RepeatEventList.getSelectedIndices()) {
            doomedEvents.add(repeatEvents.get(i));
        }//end for
        for (int i : SingleEventList.getSelectedIndices()) {
            doomedEvents.add(singleEvents.get(i));
        }//end for
        for (Event e : doomedEvents) {
            scheduler.removeEvent(e);
        }//end for
        updateRepeatEventList();
        updateSingleEventList();
    }//GEN-LAST:event_DeleteSelectedEventsButtonActionPerformed

    /**
     * Action method for the clear events button. Empties both the single and
     * repeat event lists.
     */
    private void ClearEventsButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ClearEventsButtonActionPerformed
        scheduler.clearSchedule();
        updateRepeatEventList();
        updateSingleEventList();
    }//GEN-LAST:event_ClearEventsButtonActionPerformed

    /**
     * Adds an event to the {@link EventScheduler}, and to the event lists for
     * this form. Gathers information from the forms created by
     * {@link SchedulerForm#CreateEventButton}.
     */
    public void generateEvent() {
        String selected = (String) CreateEventComboBox.getSelectedItem();
        switch (selected) {
            case "Gather Statistics":
                ref.scheduler.addEvent(new GatherStatisticsEvent(
                        createEventForm.stepCount,
                        createEventForm.eventName,
                        createEventForm.repeat,
                        ref));
                break;
            case "Output Statistics":
                ref.scheduler.addEvent(new OutputStatisticsEvent(
                        createEventForm.stepCount,
                        createEventForm.eventName,
                        createEventForm.repeat,
                        ref));
                break;
            case "Run":
                ref.scheduler.addEvent(new RunEvent(
                        createEventForm.stepCount,
                        createEventForm.eventName,
                        createEventForm.repeat,
                        ref));
                break;
            case "Pause":
                ref.scheduler.addEvent(new PauseEvent(
                        createEventForm.stepCount,
                        createEventForm.eventName,
                        createEventForm.repeat,
                        ref));
                break;
            case "Refresh Seed":
                ref.scheduler.addEvent(new RefreshSeedEvent(
                        createEventForm.stepCount,
                        createEventForm.eventName,
                        createEventForm.repeat,
                        ref));
                break;
            case "Reset Grid":
                ref.scheduler.addEvent(new ResetGridEvent(
                        createEventForm.stepCount,
                        createEventForm.eventName,
                        createEventForm.repeat,
                        ref));
                break;
            //TODO: Add ability to tune this
            case "Generate Random Line":
                ref.scheduler.addEvent(new GenerateRandomLineEvent(
                        createEventForm.stepCount,
                        createEventForm.eventName,
                        createEventForm.repeat,
                        ref));
                break;
            case "Place Line":
                ref.scheduler.addEvent(new PlaceLineEvent(
                        createLineEventForm.stepCount,
                        createLineEventForm.eventName,
                        createLineEventForm.repeat,
                        ref,
                        createLineEventForm.selectedNode1,
                        createLineEventForm.selectedNode2,
                        createLineEventForm.gti));
                break;
            default:
                System.err.println("Invalid CreateEventComboBox option selected!");
        }//end switch
        updateRepeatEventList();
        updateSingleEventList();
    }//end generateBaseEvent

    /**
     * Returns the CreateEventComboBox.
     * @return CreateEventComboBox
     */
    public JComboBox getCreateEventComboBox() {
        return CreateEventComboBox;
    }//end getCreateEventComboBox

    /**
     * Looks for repeat events in the {@link EventScheduler}, and displays them
     * in the {@link JList} for repeat events.
     */
    public final void updateRepeatEventList() {
        RepeatEventList.setListData(scheduler.getRepeatedEventsDisplayList().toArray());
    }//end updateRepeatEventList

    /**
     * Looks for single events in the {@link EventScheduler}, and displays them
     * in the {@link JList} for single events.
     */
    public final void updateSingleEventList() {
        SingleEventList.setListData(scheduler.getSingleEventsDisplayList().toArray());
    }//end updateRepeatEventList

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton ClearEventsButton;
    private javax.swing.JButton CreateEventButton;
    private javax.swing.JComboBox CreateEventComboBox;
    private javax.swing.JButton DeleteSelectedEventsButton;
    private javax.swing.JLabel EventTypeLabel;
    private javax.swing.JList RepeatEventList;
    private javax.swing.JLabel RepeatEventListLabel;
    private javax.swing.JList SingleEventList;
    private javax.swing.JLabel SingleEventListLabel;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    // End of variables declaration//GEN-END:variables

    @Override
    /**
     * Runs the form.
     */
    public void run() {
        if (ref != null) {
            setVisible(true);
        }//end if
    }//end run
}
