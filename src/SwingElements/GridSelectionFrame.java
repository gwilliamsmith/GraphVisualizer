package SwingElements;

import javax.swing.JOptionPane;
import javax.swing.JTextField;

/**
 * Form used to define the number of rows/columns of nodes, as well as the time
 * in milliseconds between steps when auto-running steps.
 */
public class GridSelectionFrame extends javax.swing.JFrame implements Runnable {

    private Base ref;                                                           //Used to access other objects as needed
    private int c = 0;                                                          //The number of columns in the grid to be created
    private int r = 0;                                                          //The number of rows in the grid to be created
    private int st = 0;                                                         //The initial stepTime of the Base object to be created

    /**
     * Constructor.
     *
     * @param in {@link Base} object used to access other objects as needed
     */
    public GridSelectionFrame(Base in) {
        ref = in;
        initComponents();
        if (ref != null) {
            NumberOfRowsTextField.setText(ref.getGraph().getMatrix().length + "");
            NumberOfColumnsTextField.setText(ref.getGraph().getMatrix()[0].length + "");
            StepTimeTextField.setText(ref.getStepTime() + "");
            setDefaultCloseOperation(DISPOSE_ON_CLOSE);
            this.c = ref.getGraph().getMatrix()[0].length;
            this.r = ref.getGraph().getMatrix().length;
            this.st = ref.getStepTime();
        }//end if
        this.setTitle("Grid Settings");
    }//end constructor

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        // Variables declaration - do not modify//GEN-BEGIN:variables
        javax.swing.JLabel numberOfColumnsLabel = new javax.swing.JLabel();
        javax.swing.JLabel numberOfRowsLabel = new javax.swing.JLabel();
        NumberOfColumnsTextField = new javax.swing.JTextField();
        NumberOfRowsTextField = new javax.swing.JTextField();
        javax.swing.JButton submitButton = new javax.swing.JButton();
        javax.swing.JLabel timeBetweenStepsLabel = new javax.swing.JLabel();
        javax.swing.JPanel jPanel1 = new javax.swing.JPanel();
        StepTimeTextField = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(300, 155));
        setResizable(false);

        numberOfColumnsLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        numberOfColumnsLabel.setText("Number of Columns");
        numberOfColumnsLabel.setMaximumSize(new java.awt.Dimension(93, 15));
        numberOfColumnsLabel.setMinimumSize(new java.awt.Dimension(93, 15));
        numberOfColumnsLabel.setPreferredSize(new java.awt.Dimension(93, 15));

        numberOfRowsLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        numberOfRowsLabel.setText("Number of Rows");

        submitButton.setText("Ok");
        submitButton.setMaximumSize(new java.awt.Dimension(50, 25));
        submitButton.setMinimumSize(new java.awt.Dimension(50, 25));
        submitButton.setPreferredSize(new java.awt.Dimension(50, 25));
        submitButton.addActionListener(this::SubmitButtonActionPerformed);

        timeBetweenStepsLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        timeBetweenStepsLabel.setText("Time between steps");
        timeBetweenStepsLabel.setMaximumSize(new java.awt.Dimension(96, 15));
        timeBetweenStepsLabel.setMinimumSize(new java.awt.Dimension(96, 15));

        jPanel1.setMinimumSize(new java.awt.Dimension(100, 20));
        jPanel1.setPreferredSize(new java.awt.Dimension(100, 20));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(86, Short.MAX_VALUE)
                .addComponent(StepTimeTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(86, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(StepTimeTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(NumberOfColumnsTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 32, Short.MAX_VALUE)
                        .addComponent(NumberOfRowsTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(numberOfColumnsLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(numberOfRowsLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(10, 10, 10))
            .addGroup(layout.createSequentialGroup()
                .addGap(121, 121, 121)
                .addComponent(submitButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(timeBetweenStepsLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 292, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(numberOfColumnsLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(numberOfRowsLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(5, 5, 5)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(NumberOfColumnsTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(NumberOfRowsTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(timeBetweenStepsLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(submitButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Action method for the submit button. Checks input, then creates a new
     * {@link Base} object with the validated input.
     */
    private void SubmitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SubmitButtonActionPerformed
        int newC = checkTextField(NumberOfColumnsTextField, "Columns");
        int newR = checkTextField(NumberOfRowsTextField, "Rows");
        int newSt = checkTextField(StepTimeTextField, "Step Time");
        if (newC != -1 && newR != -1 && newSt != -1) {
            if (ref == null) {
                new Base(newC, newR, newSt).setVisible(true);
            }
            else {
                if(!(newC == this.c && newR == this.r)){
                    ref.resizeGrid(newC, newR, newSt);
                }//end if
                else{
                    if(newSt != this.st){
                        ref.setStepTime(newSt);
                    }//end if
                }//end else
            }//end else
            this.dispose();
        }//end if
    }//GEN-LAST:event_SubmitButtonActionPerformed

    /**
     * Checks a given {@link JTextField} to ensure that the input is numerical
     * and greater than 0.
     *
     * @param field The {@link JTextField} to be checked.
     * @param title The title for the error message, should it be generated.
     * @return The final integer value after checking is performed
     */
    private int checkTextField(JTextField field, String title) {
        int out;
        try {
            out = Integer.parseInt(field.getText());
            if (out <= 0) {
                JOptionPane.showMessageDialog(this, "Enter a number greater than 0!", title, JOptionPane.ERROR_MESSAGE);
                out = -1;
            }//end if
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "You must enter a number!", title, JOptionPane.ERROR_MESSAGE);
            out = -1;
        }//end tryCatch
        return out;
    }//end checkTextField


    private javax.swing.JTextField NumberOfColumnsTextField;
    private javax.swing.JTextField NumberOfRowsTextField;
    private javax.swing.JTextField StepTimeTextField;
    // End of variables declaration//GEN-END:variables

    @Override
    public void run() {
        if (ref != null) {
            this.setVisible(true);
        }//end if
    }//end run 
}//end GridSelectionFrame
