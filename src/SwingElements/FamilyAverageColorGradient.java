package SwingElements;

import java.awt.Color;
import java.awt.Graphics;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.awt.event.MouseMotionListener;
import java.util.ArrayList;
import javax.swing.JPanel;
import javax.swing.SwingUtilities;

public class FamilyAverageColorGradient extends javax.swing.JFrame {

    private ArrayList<Color> colors = new ArrayList<>();

    private class GCanvas extends JPanel {

        public int windowX = 0;
        public int windowY = 0;

        public int startX;
        public int startY;

        @Override
        public void paint(Graphics g) {
            super.paint(g);
            this.setBackground(Color.WHITE);
            for (int i = 0; i < colors.size(); i++) {
                g.setColor(colors.get(i));
                g.fillRect(i * 2 + windowX, 0 + windowY, 2, 1000);
            }//end for
        }//end paint
    }
    private GCanvas canvas = new GCanvas();

    /**
     * Creates new form AverageFamilyColorGradient
     */
    public FamilyAverageColorGradient() {
        initComponents();
        this.add(canvas);
        canvas.setSize(this.getWidth(), this.getHeight());
        canvas.addMouseListener(new MouseListener() {

            @Override
            public void mouseClicked(MouseEvent e) {
            }

            @Override
            public void mousePressed(MouseEvent e) {
                if (SwingUtilities.isLeftMouseButton(e)) {
                    canvas.startY = e.getYOnScreen();
                    canvas.startX = e.getXOnScreen();
                }//end if
            }//end mousePressed

            @Override
            public void mouseReleased(MouseEvent e) {
            }

            @Override
            public void mouseEntered(MouseEvent e) {
            }

            @Override
            public void mouseExited(MouseEvent e) {
            }

        });
        canvas.addMouseMotionListener(new MouseMotionListener() {

            @Override
            public void mouseDragged(MouseEvent e) {
                if (SwingUtilities.isLeftMouseButton(e)) {
                    canvas.windowX += (e.getXOnScreen() - canvas.startX);
                    //canvas.windowY += (e.getYOnScreen() - canvas.startY);
                    canvas.startX = e.getXOnScreen();
                    canvas.startY = e.getYOnScreen();
                    canvas.repaint();
                }//end if
            }

            @Override
            public void mouseMoved(MouseEvent e) {
                //throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
            }//end mouseMoved

        });
        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        canvas.setBackground(Color.WHITE);
    }//end constructor

    public void addNewColor(Color in) {
        colors.add(in);
    }//end addNewColor

    public void refresh() {
        canvas.repaint();
    }//end refresh

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}//end FamilyAverageColorGradient
